language: python
services:
  - postgresql
python:
  - "3.8"
before_script:
  - touch .env
  - echo SECRET_KEY=$SECRET_KEY >> .env
  - echo DATABASE_URL=$DATABASE_URL >> .env
  - echo DEBUG=on >> .env
  - psql -c 'create database db_movies_quotes;' -U postgres
  - cd src
  - chmod +x run_linter.sh
  - python3 manage.py makemigrations

install:
  - pip3 install -r requirements.txt

before_deploy:
  - cd ..
  - chmod +x generate_docs.sh
  - ./generate_docs.sh
  - sudo apt-get install zip
  - zip -r docs.zip docs

jobs:
  include:
    - stage: "Build"
      name: "Building app"
      script:
        - python3 manage.py migrate
    - stage: "Linter"
      name: "Running linter"
      script: ./run_linter.sh
    - stage: "Tests"
      name: "Unit"
      script:
        - python3 manage.py test apps/movie_quotes/tests/unit/domain/entities
        - python3 manage.py test apps/movie_quotes/tests/unit/domain/serializers
        - python3 manage.py test apps/movie_quotes/tests/unit/infrastructure
        - python3 manage.py test apps/movie_quotes/tests/unit/infrastructure/repositories
        - python3 manage.py test apps/movie_quotes/tests/unit/utility

        - python3 manage.py test apps/movie_quotes/tests/integration/domain/serializers
        - python3 manage.py test apps/movie_quotes/tests/integration/domain/usecases

    - stage: "Tests"
      name: "Integration"
      script: echo 0
    - stage: "Tests"
      name: "End to end"
      script: echo 0
    - stage: "Documentation"
      name: "Documentation"
      script:
        - git config --local user.name $USER_NAME
        - git config --local user.email $USER_EMAIL
        - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
        - git tag $TRAVIS_TAG
      deploy:
        provider: releases
        api_key: $token
        file: docs.zip
        skip_cleanup: true
        overwrite: true
        on:
          tags: true
